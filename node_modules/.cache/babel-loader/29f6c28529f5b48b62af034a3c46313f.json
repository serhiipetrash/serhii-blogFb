{"remainingRequest":"/home/sp/Documents/Vue3Firebase/serhii-blog2FB/node_modules/babel-loader/lib/index.js!/home/sp/Documents/Vue3Firebase/serhii-blog2FB/src/composables/getPost.js","dependencies":[{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2FB/src/composables/getPost.js","mtime":1644001293152},{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2FB/babel.config.js","mtime":1643785385798},{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2FB/node_modules/cache-loader/dist/cjs.js","mtime":1643785380808},{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2FB/node_modules/babel-loader/lib/index.js","mtime":1643785381678}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvc3AvRG9jdW1lbnRzL1Z1ZTNGaXJlYmFzZS9zZXJoaWktYmxvZzJGQi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9zcC9Eb2N1bWVudHMvVnVlM0ZpcmViYXNlL3NlcmhpaS1ibG9nMkZCL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5lcnJvci5jYXVzZS5qcyI7CmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IHByb2plY3RGaXJlc3RvcmUgfSBmcm9tICcuLi9maXJlYmFzZS9jb25maWcnOwoKdmFyIGdldFBvc3QgPSBmdW5jdGlvbiBnZXRQb3N0KGlkKSB7CiAgdmFyIHBvc3QgPSByZWYobnVsbCk7CiAgdmFyIGVycm9yID0gcmVmKG51bGwpOwoKICB2YXIgbG9hZCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBwcm9qZWN0RmlyZXN0b3JlLmNvbGxlY3Rpb24oJ3Bvc3RzJykuZG9jKGlkKS5vcmRlckJ5KCdjcmVhdGVkQXQnLCAnZGVzYycpLmdldCgpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuZXhpc3RzKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1RoYXQgcG9zdCBkb2VzIG5vdCBleGlzdCcpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHBvc3QudmFsdWUgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHJlcy5kYXRhKCkpLCB7fSwgewogICAgICAgICAgICAgICAgaWQ6IHJlcy5pZAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHBvc3QudmFsdWUpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgZXJyb3IudmFsdWUgPSBfY29udGV4dC50MC5tZXNzYWdlOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLnZhbHVlKTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTBdXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKTsKCiAgcmV0dXJuIHsKICAgIHBvc3Q6IHBvc3QsCiAgICBlcnJvcjogZXJyb3IsCiAgICBsb2FkOiBsb2FkCiAgfTsKfTsKCmV4cG9ydCBkZWZhdWx0IGdldFBvc3Q7"},{"version":3,"sources":["/home/sp/Documents/Vue3Firebase/serhii-blog2FB/src/composables/getPost.js"],"names":["ref","projectFirestore","getPost","id","post","error","load","collection","doc","orderBy","get","res","exists","Error","value","data","console","log","message"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AACtB,MAAMC,IAAI,GAAGJ,GAAG,CAAC,IAAD,CAAhB;AACA,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAD,CAAjB;;AAEA,MAAMM,IAAI;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEOL,gBAAgB,CAC7BM,UADa,CACF,OADE,EAEbC,GAFa,CAETL,EAFS,EAGbM,OAHa,CAGL,WAHK,EAGQ,MAHR,EAIbC,GAJa,EAFP;;AAAA;AAELC,cAAAA,GAFK;;AAAA,kBAQJA,GAAG,CAACC,MARA;AAAA;AAAA;AAAA;;AAAA,oBASDC,KAAK,CAAC,0BAAD,CATJ;;AAAA;AAWTT,cAAAA,IAAI,CAACU,KAAL,mCAAkBH,GAAG,CAACI,IAAJ,EAAlB;AAA8BZ,gBAAAA,EAAE,EAAEQ,GAAG,CAACR;AAAtC;AACAa,cAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACU,KAAjB;AAZS;AAAA;;AAAA;AAAA;AAAA;AAcTT,cAAAA,KAAK,CAACS,KAAN,GAAc,YAAII,OAAlB;AACAF,cAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACS,KAAlB;;AAfS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJR,IAAI;AAAA;AAAA;AAAA,KAAV;;AAkBA,SAAO;AAAEF,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA,KAAR;AAAeC,IAAAA,IAAI,EAAJA;AAAf,GAAP;AACD,CAvBD;;AAyBA,eAAeJ,OAAf","sourcesContent":["import { ref } from 'vue';\nimport { projectFirestore } from '../firebase/config';\n\nconst getPost = (id) => {\n  const post = ref(null);\n  const error = ref(null);\n\n  const load = async () => {\n    try {\n      let res = await projectFirestore\n        .collection('posts')\n        .doc(id)\n        .orderBy('createdAt', 'desc')\n        .get();\n\n      if (!res.exists) {\n        throw Error('That post does not exist');\n      }\n      post.value = { ...res.data(), id: res.id };\n      console.log(post.value);\n    } catch (err) {\n      error.value = err.message;\n      console.log(error.value);\n    }\n  };\n  return { post, error, load };\n};\n\nexport default getPost;\n"]}]}