{"remainingRequest":"/home/sp/Documents/Vue3Firebase/serhii-blog2/node_modules/babel-loader/lib/index.js!/home/sp/Documents/Vue3Firebase/serhii-blog2/src/composables/getPost.js","dependencies":[{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2/src/composables/getPost.js","mtime":1643820253446},{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2/babel.config.js","mtime":1643785385798},{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2/node_modules/cache-loader/dist/cjs.js","mtime":1643785380808},{"path":"/home/sp/Documents/Vue3Firebase/serhii-blog2/node_modules/babel-loader/lib/index.js","mtime":1643785381678}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3NwL0RvY3VtZW50cy9WdWUzRmlyZWJhc2Uvc2VyaGlpLWJsb2cyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgeyByZWYgfSBmcm9tICd2dWUnOwoKdmFyIGdldFBvc3QgPSBmdW5jdGlvbiBnZXRQb3N0KGlkKSB7CiAgdmFyIHBvc3QgPSByZWYobnVsbCk7CiAgdmFyIGVycm9yID0gcmVmKG51bGwpOwoKICB2YXIgbG9hZCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGRhdGE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wb3N0cycgKyBpZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChkYXRhLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ3RoYXQgcG9zdCBkb2Vzbm90IGV4aXN0Jyk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHBvc3QudmFsdWUgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgZXJyb3IudmFsdWUgPSBfY29udGV4dC50MC5tZXNzYWdlOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLnZhbHVlKTsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTFdXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKTsKCiAgcmV0dXJuIHsKICAgIHBvc3Q6IHBvc3QsCiAgICBlcnJvcjogZXJyb3IsCiAgICBsb2FkOiBsb2FkCiAgfTsKfTsKCmV4cG9ydCBkZWZhdWx0IGdldFBvc3Q7"},{"version":3,"sources":["/home/sp/Documents/Vue3Firebase/serhii-blog2/src/composables/getPost.js"],"names":["ref","getPost","id","post","error","load","fetch","data","ok","Error","json","value","message","console","log"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,KAApB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AACtB,MAAMC,IAAI,GAAGH,GAAG,CAAC,IAAD,CAAhB;AACA,MAAMI,KAAK,GAAGJ,GAAG,CAAC,IAAD,CAAjB;;AAEA,MAAMK,IAAI;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQC,KAAK,CAAC,gCAAgCJ,EAAjC,CAFb;;AAAA;AAELK,cAAAA,IAFK;;AAAA,kBAGJA,IAAI,CAACC,EAHD;AAAA;AAAA;AAAA;;AAAA,oBAIDC,KAAK,CAAC,yBAAD,CAJJ;;AAAA;AAAA;AAAA,qBAMUF,IAAI,CAACG,IAAL,EANV;;AAAA;AAMTP,cAAAA,IAAI,CAACQ,KANI;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQTP,cAAAA,KAAK,CAACO,KAAN,GAAc,YAAIC,OAAlB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACO,KAAlB;;AATS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJN,IAAI;AAAA;AAAA;AAAA,KAAV;;AAYA,SAAO;AAAEF,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA,KAAR;AAAeC,IAAAA,IAAI,EAAJA;AAAf,GAAP;AACD,CAjBD;;AAmBA,eAAeJ,OAAf","sourcesContent":["import { ref } from 'vue';\n\nconst getPost = (id) => {\n  const post = ref(null);\n  const error = ref(null);\n\n  const load = async () => {\n    try {\n      let data = await fetch('http://localhost:3000/posts' + id);\n      if (!data.ok) {\n        throw Error('that post doesnot exist');\n      }\n      post.value = await data.json();\n    } catch (err) {\n      error.value = err.message;\n      console.log(error.value);\n    }\n  };\n  return { post, error, load };\n};\n\nexport default getPost;\n"]}]}